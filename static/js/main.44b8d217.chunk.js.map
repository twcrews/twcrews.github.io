{"version":3,"sources":["App.js","index.js"],"names":["App","useState","shadowNav","setShadowNav","currentThing","setCurrentThing","useScrollPosition","_prevPos","isScrolled","currPos","y","useEffect","interval","setInterval","Data","Header","SubtitleItems","length","clearInterval","Fragment","id","className","elevation","position","alt","src","Meta","Logo","variant","Owner","Anchors","map","anchor","Variant","color","Color","onClick","document","getElementById","Link","scrollIntoView","Name","paragraph","Title","SubtitlePrefix","text","inline","Attributes","attr","Icon","fontSize","Description","Sections","section","Content","item","Portfolio","Projects","project","style","background","Image","backgroundSize","opacity","theme","createMuiTheme","Theme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.44b8d217.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport * as Material from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport TextTransition from 'react-text-transition';\nimport Data from './Data.json';\n\nfunction App() {\n  const [shadowNav, setShadowNav] = useState(false);\n  const [currentThing, setCurrentThing] = useState(0);\n\n  useScrollPosition(({ _prevPos, currPos }) => {\n    const isScrolled = currPos.y < 0;\n    if (isScrolled !== shadowNav) setShadowNav(isScrolled);\n  }, [shadowNav]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (currentThing < Data.Header.SubtitleItems.length - 1) {\n        setCurrentThing(currentThing + 1);\n      } else {\n        setCurrentThing(0);\n      }\n    }, 2000);\n    return (() => clearInterval(interval));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  return (\n    <React.Fragment>\n      <div\n        id=\"top\"\n        className=\"Top\"\n      />\n      <Material.AppBar\n        id=\"nav\"\n        elevation={shadowNav ? 3 : 0}\n        className=\"AppBar\"\n        position=\"sticky\"\n      >\n        <Material.Toolbar className=\"NavBar\">\n          <span className=\"NavItems\">\n            <img\n              className=\"NavLogo\"\n              alt=\"Logo\"\n              src={Data.Meta.Logo}\n            />\n            <Material.Typography\n              className=\"NavTitle\"\n              variant=\"h6\"\n            >\n              {Data.Meta.Owner}\n            </Material.Typography>\n          </span>\n          <span className=\"NavItems\">\n            <span className=\"AnchorButtons\">\n              {Data.Meta.Anchors.map(anchor =>\n                <Material.Button\n                  key={anchor.Name}\n                  variant={anchor.Variant}\n                  color={anchor.Color}\n                  onClick={() => document.getElementById(anchor.Link)\n                    .scrollIntoView()}\n                >\n                  {anchor.Name}\n                </Material.Button>\n              )}\n            </span>\n          </span>\n        </Material.Toolbar>\n      </Material.AppBar>\n      <div\n        className=\"AboutSection\"\n      >\n        <Material.Typography\n          variant=\"h1\"\n          paragraph\n          className=\"Header\"\n        >\n          {Data.Header.Title}\n        </Material.Typography>\n        <Material.Typography\n          variant=\"h4\"\n          className=\"Subtitle\"\n        >\n          {Data.Header.SubtitlePrefix}\n          <TextTransition\n            text={Data.Header.SubtitleItems[currentThing]}\n            inline\n          />\n        </Material.Typography>\n        <div className=\"HeaderSpacer\" />\n      </div>\n      <div className=\"AttributesSection\">\n        <div className=\"Attributes\">\n          {Data.Attributes.map(attr =>\n            <div\n              className=\"AttributeTile\"\n            >\n              <span className=\"BigIcon\">\n                <Icon fontSize=\"inherit\" color=\"primary\">\n                  {attr.Icon}\n                </Icon>\n                <Material.Typography variant=\"h5\">\n                  {attr.Name}\n                </Material.Typography>\n              </span>\n              <div className=\"Multiline GrayText\">\n                <Material.Typography color=\"inherit\">\n                  {attr.Description}\n                </Material.Typography>\n                <Material.Typography variant=\"h6\" paragraph />\n                {attr.Sections.map(section =>\n                  <React.Fragment>\n                    <Material.Typography variant=\"h6\">\n                      {section.Title}\n                    </Material.Typography>\n                    {section.Content.map(item =>\n                      <Material.Typography>\n                        {item}\n                      </Material.Typography>\n                    )}\n                    <Material.Typography variant=\"h6\" paragraph />\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"PortfolioSection\" id=\"portfolio\">\n        <Material.Typography variant=\"h3\" paragraph>\n          {Data.Portfolio.Title}\n        </Material.Typography>\n        <span className=\"GrayText\">\n          <Material.Typography variant=\"subtitle1\" paragraph>\n            {Data.Portfolio.Description}\n          </Material.Typography>\n        </span>\n        <div className=\"PortfolioTiles\">\n          {Data.Portfolio.Projects.map(project =>\n            <div\n              className=\"PortfolioProject\"\n              style={{ background: \"linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url(\" + project.Image + \"), #00b9ff\", backgroundSize: \"cover\" }}\n            >\n              <div className=\"ProjectTypography\">\n                <Material.Typography variant=\"h6\">\n                  {project.Title}\n                </Material.Typography>\n                <Material.Typography \n                  variant=\"subtitle2\"\n                  style={{opacity: 0.8}}\n                >\n                  {project.Description}\n                </Material.Typography>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Data from './Data.json';\n\nlet theme = createMuiTheme(Data.Meta.Theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}