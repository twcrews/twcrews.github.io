{"version":3,"sources":["App.js","index.js"],"names":["App","useState","shadowNav","setShadowNav","currentThing","setCurrentThing","useScrollPosition","_prevPos","isScrolled","currPos","y","useEffect","interval","setInterval","Data","Header","SubtitleItems","length","clearInterval","Fragment","id","className","elevation","position","alt","src","Meta","Logo","variant","Owner","Anchors","map","anchor","Name","Variant","color","Color","onClick","document","getElementById","Link","scrollIntoView","style","backgroundImage","Hero","paragraph","Title","SubtitlePrefix","text","inline","Attributes","attr","Icon","fontSize","Description","Sections","section","Content","item","Portfolio","Projects","project","Image","backgroundColor","backgroundSize","backgroundPosition","Enabled","url","window","open","textTransform","Year","opacity","theme","createMuiTheme","Theme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"gTAgMeA,MAxLf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,KAuBb,OAjBAC,6BAAkB,YAA2B,EAAxBC,SAAyB,IACtCC,EADqC,EAAdC,QACFC,EAAI,EAC3BF,IAAeN,GAAWC,EAAaK,KAC1C,CAACN,IAEJS,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACvBT,EAAeU,EAAKC,OAAOC,cAAcC,OAAS,EACpDZ,EAAgBD,EAAe,GAE/BC,EAAgB,KAEjB,KACH,OAAQ,kBAAMa,cAAcN,OAK5B,eAAC,IAAMO,SAAP,WACE,qBACEC,GAAG,MACHC,UAAU,QAEZ,cAAC,IAAD,CACED,GAAG,MACHE,UAAWpB,EAAY,EAAI,EAC3BmB,UAAU,SACVE,SAAS,SAJX,SAME,eAAC,IAAD,CAAkBF,UAAU,SAA5B,UACE,uBAAMA,UAAU,WAAhB,UACE,qBACEA,UAAU,UACVG,IAAI,OACJC,IAAKX,EAAKY,KAAKC,OAEjB,cAAC,IAAD,CACEN,UAAU,WACVO,QAAQ,KAFV,SAIGd,EAAKY,KAAKG,WAGf,sBAAMR,UAAU,WAAhB,SACGP,EAAKY,KAAKI,QAAQC,KAAI,SAAAC,GAAM,OAC3B,cAAC,IAAD,CAEEZ,GAAIY,EAAOC,KACXZ,UAAU,eACVO,QAASI,EAAOE,QAChBC,MAAOH,EAAOI,MACdC,QAAS,kBAAMC,SACZC,eAAeP,EAAOQ,MACtBC,kBARL,SAUGT,EAAOC,MATHD,EAAOC,gBAetB,sBACEZ,UAAU,eADZ,UAGE,qBACEA,UAAU,OACVqB,MAAO,CAAEC,gBAAiB,OAAS7B,EAAKC,OAAO6B,KAAO,OAExD,cAAC,IAAD,CACEhB,QAAQ,KACRiB,WAAS,EACTxB,UAAU,SAHZ,SAKGP,EAAKC,OAAO+B,QAEf,eAAC,IAAD,CACElB,QAAQ,KACRP,UAAU,WAFZ,UAIGP,EAAKC,OAAOgC,eACb,cAAC,IAAD,CACEC,KAAMlC,EAAKC,OAAOC,cAAcZ,GAChC6C,QAAM,OAGV,qBAAK5B,UAAU,oBAEjB,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,SACGP,EAAKoC,WAAWnB,KAAI,SAAAoB,GAAI,OACvB,sBAEE9B,UAAU,gBAFZ,UAIE,uBAAMA,UAAU,UAAhB,UACE,cAAC+B,EAAA,EAAD,CAAMC,SAAS,UAAUlB,MAAM,UAA/B,SACGgB,EAAKC,OAER,cAAC,IAAD,CAAqBxB,QAAQ,KAA7B,SACGuB,EAAKlB,UAGV,sBAAKZ,UAAU,qBAAf,UACE,cAAC,IAAD,CAAqBc,MAAM,UAA3B,SACGgB,EAAKG,cAER,cAAC,IAAD,CAAqB1B,QAAQ,KAAKiB,WAAS,IAC1CM,EAAKI,SAASxB,KAAI,SAAAyB,GAAO,OACxB,eAAC,IAAMrC,SAAP,WACE,cAAC,IAAD,CAAqBS,QAAQ,KAA7B,SACG4B,EAAQV,QAEVU,EAAQC,QAAQ1B,KAAI,SAAA2B,GAAI,OACvB,cAAC,IAAD,UACGA,GADuBA,MAI5B,cAAC,IAAD,CAAqB9B,QAAQ,KAAKiB,WAAS,MATxBW,EAAQV,eAjB5BK,EAAKlB,aAkClB,sBAAKZ,UAAU,mBAAmBD,GAAG,YAArC,UACE,cAAC,IAAD,CAAqBQ,QAAQ,KAAKiB,WAAS,EAA3C,SACG/B,EAAK6C,UAAUb,QAElB,sBAAMzB,UAAU,WAAhB,SACE,cAAC,IAAD,CAAqBO,QAAQ,YAAYiB,WAAS,EAAlD,SACG/B,EAAK6C,UAAUL,gBAGpB,qBAAKjC,UAAU,iBAAf,SACGP,EAAK6C,UAAUC,SAAS7B,KAAI,SAAA8B,GAAO,OAClC,qBAEExC,UAAU,mBACVqB,MAAO,CACLC,gBAAiB,OAASkB,EAAQC,MAAQ,IAC1CC,gBAAiB,UACjBC,eAAgB,QAChBC,mBAAoB,UAPxB,SAUE,qBACE5C,UAAU,oBACVgB,QAAS,kBAAMwB,EAAQK,SAtJjBC,EAuJON,EAAQrB,UAvJL4B,OAAOC,KAAKF,EAAK,WAwJ/B,KAxJG,IAACA,GAoJR,SAME,sBAAK9C,UAAU,oBAAf,UACE,cAAC,IAAD,CAAqBO,QAAQ,KAA7B,SACGiC,EAAQf,QAEX,cAAC,IAAD,CACElB,QAAQ,UACRc,MAAO,CAAE4B,cAAe,aAF1B,SAIGT,EAAQU,OAEX,cAAC,IAAD,CACE3C,QAAQ,YACRc,MAAO,CAAE8B,QAAS,IAFpB,SAIGX,EAAQP,oBA7BVO,EAAQf,mB,gBC/IvB2B,EAAQC,YAAe5D,EAAKY,KAAKiD,OAErCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJnC,SAASC,eAAe,U","file":"static/js/main.790a75e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport * as Material from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\r\nimport TextTransition from 'react-text-transition';\r\nimport Data from './Data.json';\r\n\r\nfunction App() {\r\n  const [shadowNav, setShadowNav] = useState(false);\r\n  const [currentThing, setCurrentThing] = useState(0);\r\n\r\n  const handleLink = (url) => { window.open(url, \"_blank\") }\r\n\r\n  useScrollPosition(({ _prevPos, currPos }) => {\r\n    const isScrolled = currPos.y < 0;\r\n    if (isScrolled !== shadowNav) setShadowNav(isScrolled);\r\n  }, [shadowNav]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (currentThing < Data.Header.SubtitleItems.length - 1) {\r\n        setCurrentThing(currentThing + 1);\r\n      } else {\r\n        setCurrentThing(0);\r\n      }\r\n    }, 2000);\r\n    return (() => clearInterval(interval));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        id=\"top\"\r\n        className=\"Top\"\r\n      />\r\n      <Material.AppBar\r\n        id=\"nav\"\r\n        elevation={shadowNav ? 3 : 0}\r\n        className=\"AppBar\"\r\n        position=\"sticky\"\r\n      >\r\n        <Material.Toolbar className=\"NavBar\">\r\n          <span className=\"NavItems\">\r\n            <img\r\n              className=\"NavLogo\"\r\n              alt=\"Logo\"\r\n              src={Data.Meta.Logo}\r\n            />\r\n            <Material.Typography\r\n              className=\"NavTitle\"\r\n              variant=\"h6\"\r\n            >\r\n              {Data.Meta.Owner}\r\n            </Material.Typography>\r\n          </span>\r\n          <span className=\"NavItems\">\r\n            {Data.Meta.Anchors.map(anchor =>\r\n              <Material.Button\r\n                key={anchor.Name}\r\n                id={anchor.Name}\r\n                className=\"AnchorButton\"\r\n                variant={anchor.Variant}\r\n                color={anchor.Color}\r\n                onClick={() => document\r\n                  .getElementById(anchor.Link)\r\n                  .scrollIntoView()}\r\n              >\r\n                {anchor.Name}\r\n              </Material.Button>\r\n            )}\r\n          </span>\r\n        </Material.Toolbar>\r\n      </Material.AppBar>\r\n      <div\r\n        className=\"AboutSection\"\r\n      >\r\n        <div\r\n          className=\"Hero\"\r\n          style={{ backgroundImage: \"url(\" + Data.Header.Hero + \")\" }}\r\n        />\r\n        <Material.Typography\r\n          variant=\"h1\"\r\n          paragraph\r\n          className=\"Header\"\r\n        >\r\n          {Data.Header.Title}\r\n        </Material.Typography>\r\n        <Material.Typography\r\n          variant=\"h4\"\r\n          className=\"Subtitle\"\r\n        >\r\n          {Data.Header.SubtitlePrefix}\r\n          <TextTransition\r\n            text={Data.Header.SubtitleItems[currentThing]}\r\n            inline\r\n          />\r\n        </Material.Typography>\r\n        <div className=\"HeaderSpacer\" />\r\n      </div>\r\n      <div className=\"AttributesSection\">\r\n        <div className=\"Attributes\">\r\n          {Data.Attributes.map(attr =>\r\n            <div\r\n              key={attr.Name}\r\n              className=\"AttributeTile\"\r\n            >\r\n              <span className=\"BigIcon\">\r\n                <Icon fontSize=\"inherit\" color=\"primary\">\r\n                  {attr.Icon}\r\n                </Icon>\r\n                <Material.Typography variant=\"h5\">\r\n                  {attr.Name}\r\n                </Material.Typography>\r\n              </span>\r\n              <div className=\"Multiline GrayText\">\r\n                <Material.Typography color=\"inherit\">\r\n                  {attr.Description}\r\n                </Material.Typography>\r\n                <Material.Typography variant=\"h6\" paragraph />\r\n                {attr.Sections.map(section =>\r\n                  <React.Fragment key={section.Title}>\r\n                    <Material.Typography variant=\"h6\">\r\n                      {section.Title}\r\n                    </Material.Typography>\r\n                    {section.Content.map(item =>\r\n                      <Material.Typography key={item}>\r\n                        {item}\r\n                      </Material.Typography>\r\n                    )}\r\n                    <Material.Typography variant=\"h6\" paragraph />\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"PortfolioSection\" id=\"portfolio\">\r\n        <Material.Typography variant=\"h3\" paragraph>\r\n          {Data.Portfolio.Title}\r\n        </Material.Typography>\r\n        <span className=\"GrayText\">\r\n          <Material.Typography variant=\"subtitle1\" paragraph>\r\n            {Data.Portfolio.Description}\r\n          </Material.Typography>\r\n        </span>\r\n        <div className=\"PortfolioTiles\">\r\n          {Data.Portfolio.Projects.map(project =>\r\n            <div\r\n              key={project.Title}\r\n              className=\"PortfolioProject\"\r\n              style={{\r\n                backgroundImage: \"url(\" + project.Image + \")\",\r\n                backgroundColor: \"#00b9ff\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                className=\"Darken FullHeight\"\r\n                onClick={() => project.Enabled ?\r\n                  handleLink(project.Link) :\r\n                  null}\r\n              >\r\n                <div className=\"ProjectTypography\">\r\n                  <Material.Typography variant=\"h6\">\r\n                    {project.Title}\r\n                  </Material.Typography>\r\n                  <Material.Typography\r\n                    variant=\"caption\"\r\n                    style={{ textTransform: \"uppercase\" }}\r\n                  >\r\n                    {project.Year}\r\n                  </Material.Typography>\r\n                  <Material.Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ opacity: 0.8 }}\r\n                  >\r\n                    {project.Description}\r\n                  </Material.Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Data from './Data.json';\r\n\r\nlet theme = createMuiTheme(Data.Meta.Theme);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}