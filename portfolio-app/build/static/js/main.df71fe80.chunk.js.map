{"version":3,"sources":["App.js","index.js"],"names":["App","useState","shadowNav","setShadowNav","currentThing","setCurrentThing","useScrollPosition","_prevPos","isScrolled","currPos","y","useEffect","interval","setInterval","Data","Header","SubtitleItems","length","clearInterval","Fragment","id","className","elevation","position","alt","src","Meta","Logo","variant","Owner","Anchors","map","anchor","Variant","color","Color","onClick","document","getElementById","Link","scrollIntoView","Name","paragraph","Title","SubtitlePrefix","text","inline","Attributes","attr","Icon","fontSize","Description","Sections","section","Content","item","Portfolio","Projects","project","style","background","Image","backgroundSize","opacity","theme","createMuiTheme","Theme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.df71fe80.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport * as Material from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\r\nimport TextTransition from 'react-text-transition';\r\nimport Data from './Data.json';\r\n\r\nfunction App() {\r\n  const [shadowNav, setShadowNav] = useState(false);\r\n  const [currentThing, setCurrentThing] = useState(0);\r\n\r\n  useScrollPosition(({ _prevPos, currPos }) => {\r\n    const isScrolled = currPos.y < 0;\r\n    if (isScrolled !== shadowNav) setShadowNav(isScrolled);\r\n  }, [shadowNav]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (currentThing < Data.Header.SubtitleItems.length - 1) {\r\n        setCurrentThing(currentThing + 1);\r\n      } else {\r\n        setCurrentThing(0);\r\n      }\r\n    }, 2000);\r\n    return (() => clearInterval(interval));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        id=\"top\"\r\n        className=\"Top\"\r\n      />\r\n      <Material.AppBar\r\n        id=\"nav\"\r\n        elevation={shadowNav ? 3 : 0}\r\n        className=\"AppBar\"\r\n        position=\"sticky\"\r\n      >\r\n        <Material.Toolbar className=\"NavBar\">\r\n          <span className=\"NavItems\">\r\n            <img\r\n              className=\"NavLogo\"\r\n              alt=\"Logo\"\r\n              src={Data.Meta.Logo}\r\n            />\r\n            <Material.Typography\r\n              className=\"NavTitle\"\r\n              variant=\"h6\"\r\n            >\r\n              {Data.Meta.Owner}\r\n            </Material.Typography>\r\n          </span>\r\n          <span className=\"NavItems\">\r\n            <span className=\"AnchorButtons\">\r\n              {Data.Meta.Anchors.map(anchor =>\r\n                <Material.Button\r\n                  key={anchor.Name}\r\n                  variant={anchor.Variant}\r\n                  color={anchor.Color}\r\n                  onClick={() => document.getElementById(anchor.Link)\r\n                    .scrollIntoView()}\r\n                >\r\n                  {anchor.Name}\r\n                </Material.Button>\r\n              )}\r\n            </span>\r\n          </span>\r\n        </Material.Toolbar>\r\n      </Material.AppBar>\r\n      <div\r\n        className=\"AboutSection\"\r\n      >\r\n        <Material.Typography\r\n          variant=\"h1\"\r\n          paragraph\r\n          className=\"Header\"\r\n        >\r\n          {Data.Header.Title}\r\n        </Material.Typography>\r\n        <Material.Typography\r\n          variant=\"h4\"\r\n          className=\"Subtitle\"\r\n        >\r\n          {Data.Header.SubtitlePrefix}\r\n          <TextTransition\r\n            text={Data.Header.SubtitleItems[currentThing]}\r\n            inline\r\n          />\r\n        </Material.Typography>\r\n        <div className=\"HeaderSpacer\" />\r\n      </div>\r\n      <div className=\"AttributesSection\">\r\n        <div className=\"Attributes\">\r\n          {Data.Attributes.map(attr =>\r\n            <div\r\n              className=\"AttributeTile\"\r\n            >\r\n              <span className=\"BigIcon\">\r\n                <Icon fontSize=\"inherit\" color=\"primary\">\r\n                  {attr.Icon}\r\n                </Icon>\r\n                <Material.Typography variant=\"h5\">\r\n                  {attr.Name}\r\n                </Material.Typography>\r\n              </span>\r\n              <div className=\"Multiline GrayText\">\r\n                <Material.Typography color=\"inherit\">\r\n                  {attr.Description}\r\n                </Material.Typography>\r\n                <Material.Typography variant=\"h6\" paragraph />\r\n                {attr.Sections.map(section =>\r\n                  <React.Fragment>\r\n                    <Material.Typography variant=\"h6\">\r\n                      {section.Title}\r\n                    </Material.Typography>\r\n                    {section.Content.map(item =>\r\n                      <Material.Typography>\r\n                        {item}\r\n                      </Material.Typography>\r\n                    )}\r\n                    <Material.Typography variant=\"h6\" paragraph />\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"PortfolioSection\" id=\"portfolio\">\r\n        <Material.Typography variant=\"h3\" paragraph>\r\n          {Data.Portfolio.Title}\r\n        </Material.Typography>\r\n        <span className=\"GrayText\">\r\n          <Material.Typography variant=\"subtitle1\" paragraph>\r\n            {Data.Portfolio.Description}\r\n          </Material.Typography>\r\n        </span>\r\n        <div className=\"PortfolioTiles\">\r\n          {Data.Portfolio.Projects.map(project =>\r\n            <div\r\n              className=\"PortfolioProject\"\r\n              style={{ background: \"linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url(\" + project.Image + \"), #00b9ff\", backgroundSize: \"cover\" }}\r\n            >\r\n              <div className=\"ProjectTypography\">\r\n                <Material.Typography variant=\"h6\">\r\n                  {project.Title}\r\n                </Material.Typography>\r\n                <Material.Typography \r\n                  variant=\"subtitle2\"\r\n                  style={{opacity: 0.8}}\r\n                >\r\n                  {project.Description}\r\n                </Material.Typography>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Data from './Data.json';\r\n\r\nlet theme = createMuiTheme(Data.Meta.Theme);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}